local function addskeletonesp(player)
    spawn(function()
        local supported = true
        while supported do wait()
        local parttbl = {"Head", "LowerTorso", "RightUpperLeg", "LeftUpperLeg", "RightLowerLeg", "LeftLowerLeg", "RightFoot", "LeftFoot", "LeftUpperArm", "RightUpperArm", "RightLowerArm", "LeftLowerArm", "LeftHand", "RightHand"}
        for i,v in pairs(parttbl) do
            if player.Character:FindFirstChild(v) == nil then
                supported = false
            end
        end
        if supported then
            function createline(from, to)
                local Camera = Workspace.CurrentCamera
                local Line = Drawing.new("Line")
                Line.Visible = true
                Line.From = Vector2.new(from.X, from.Y)
                Line.To = Vector2.new(to.X, to.Y)
                Line.Color = Color3.fromRGB(255, 255, 255)
                Line.Thickness = 1.5
                Line.Transparency = 1
                return Line
            end
            
            function getpos(pos)
                return Vector2.new(pos.X, pos.Y)
            end
            
            local Camera = Workspace.CurrentCamera
            
            local TopTorso = Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0))
            local BottomTorso = Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0))
            
            local MainLine = createline(TopTorso, BottomTorso)
            
            local RightLeg = Camera:WorldToViewportPoint(player.Character.RightUpperLeg.Position + Vector3.new(0,0.2,0))
            local RightLegLine = createline(BottomTorso, RightLeg)
            
            local LeftLeg = Camera:WorldToViewportPoint(player.Character.LeftUpperLeg.Position + Vector3.new(0,0.2,0))
            local LeftLegLine = createline(BottomTorso, LeftLeg)
            
            local RightKnee = Camera:WorldToViewportPoint(player.Character.RightLowerLeg.Position + Vector3.new(0,0.2,0))
            local RightKneeLine = createline(RightLeg, RightKnee)
            
            local LeftKnee = Camera:WorldToViewportPoint(player.Character.LeftLowerLeg.Position + Vector3.new(0,0.2,0))
            local LeftKneeLine = createline(LeftLeg, LeftKnee)
            
            local RightFoot = Camera:WorldToViewportPoint(player.Character.RightFoot.Position)
            local RightFootLine = createline(RightKnee, RightFoot)
            
            local LeftFoot = Camera:WorldToViewportPoint(player.Character.LeftFoot.Position)
            local LeftFootLine = createline(LeftKnee, LeftFoot)
            
            local LeftArm = Camera:WorldToViewportPoint(player.Character.LeftUpperArm.Position + Vector3.new(0,0.2,0))
            local LeftLine = createline(TopTorso, LeftArm)
            
            local RightArm = Camera:WorldToViewportPoint(player.Character.RightUpperArm.Position + Vector3.new(0,0.2,0))
            local RightLine = createline(TopTorso, RightArm)
            
            local RightElbow = Camera:WorldToViewportPoint(player.Character.RightLowerArm.Position + Vector3.new(0,0.2,0))
            local RightElbowLine = createline(RightArm, RightElbow)
            
            local LeftElbow = Camera:WorldToViewportPoint(player.Character.LeftLowerArm.Position + Vector3.new(0,0.2,0))
            local LeftElbowLine = createline(LeftArm, LeftElbow)
            
            local LeftHand = Camera:WorldToViewportPoint(player.Character.LeftHand.Position)
            local LeftHandLine = createline(LeftElbow, LeftHand)
            
            local RightHand = Camera:WorldToViewportPoint(player.Character.RightHand.Position)
            local RightHandLine = createline(RightElbow, RightHand)
            
            game:GetService("RunService").RenderStepped:Connect(function()
                local Camera = Workspace.CurrentCamera
                if player.Character ~= nil and player.Character:FindFirstChild("Humanoid") ~= nil and player.Character:FindFirstChild("HumanoidRootPart") ~= nil and player.Character:FindFirstChild("Humanoid").Health > 0 then
                    local Vector, onScreen = Camera:worldToViewportPoint(player.Character.HumanoidRootPart.Position)
                    
                    local TopTorso = Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0))
                    local BottomTorso = Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0))
                    local RightLeg = Camera:WorldToViewportPoint(player.Character.RightUpperLeg.Position + Vector3.new(0,0.2,0))
                    local LeftLeg = Camera:WorldToViewportPoint(player.Character.LeftUpperLeg.Position + Vector3.new(0,0.2,0))
                    local RightKnee = Camera:WorldToViewportPoint(player.Character.RightLowerLeg.Position + Vector3.new(0,0.2,0))
                    local LeftKnee = Camera:WorldToViewportPoint(player.Character.LeftLowerLeg.Position + Vector3.new(0,0.2,0))
                    local RightFoot = Camera:WorldToViewportPoint(player.Character.RightFoot.Position)
                    local LeftFoot = Camera:WorldToViewportPoint(player.Character.LeftFoot.Position)
                    local LeftArm = Camera:WorldToViewportPoint(player.Character.LeftUpperArm.Position + Vector3.new(0,0.2,0))
                    local RightArm = Camera:WorldToViewportPoint(player.Character.RightUpperArm.Position + Vector3.new(0,0.2,0))
                    local RightElbow = Camera:WorldToViewportPoint(player.Character.RightLowerArm.Position + Vector3.new(0,0.2,0))
                    local LeftElbow = Camera:WorldToViewportPoint(player.Character.LeftLowerArm.Position + Vector3.new(0,0.2,0))
                    local LeftHand = Camera:WorldToViewportPoint(player.Character.LeftHand.Position)
                    local RightHand = Camera:WorldToViewportPoint(player.Character.RightHand.Position)
                    
                    RightFootLine.From = getpos(Camera:WorldToViewportPoint(player.Character.RightLowerLeg.Position + Vector3.new(0,0.2,0)))
                    LeftFootLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LeftLowerLeg.Position + Vector3.new(0,0.2,0)))
                    LeftKneeLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LeftUpperLeg.Position + Vector3.new(0,0.2,0)))
                    RightKneeLine.From = getpos(Camera:WorldToViewportPoint(player.Character.RightUpperLeg.Position + Vector3.new(0,0.2,0)))
                    RightLegLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0)))
                    LeftLegLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0)))
                    LeftHandLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LeftLowerArm.Position + Vector3.new(0,0.2,0)))
                    RightHandLine.From = getpos(Camera:WorldToViewportPoint(player.Character.RightLowerArm.Position + Vector3.new(0,0.2,0)))
                    MainLine.From = getpos(Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0)))
                    LeftLine.From = getpos(Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0)))
                    RightLine.From = getpos(Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0)))
                    RightElbowLine.From = getpos(Camera:WorldToViewportPoint(player.Character.RightUpperArm.Position + Vector3.new(0,0.2,0)))
                    LeftElbowLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LeftUpperArm.Position + Vector3.new(0,0.2,0)))
                    
                    RightFootLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightFoot.Position))
                    LeftFootLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftFoot.Position))
                    LeftKneeLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftLowerLeg.Position + Vector3.new(0,0.2,0)))
                    RightKneeLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightLowerLeg.Position + Vector3.new(0,0.2,0)))
                    RightLegLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightUpperLeg.Position + Vector3.new(0,0.2,0)))
                    LeftLegLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftUpperLeg.Position + Vector3.new(0,0.2,0)))
                    LeftHandLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftHand.Position))
                    RightHandLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightHand.Position))
                    MainLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0)))
                    LeftLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftUpperArm.Position + Vector3.new(0,0.2,0)))
                    RightLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightUpperArm.Position + Vector3.new(0,0.2,0)))
                    RightElbowLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightLowerArm.Position + Vector3.new(0,0.2,0)))
                    LeftElbowLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftLowerArm.Position + Vector3.new(0,0.2,0)))
                    
                    if onScreen then
                        RightFootLine.Visible = true
                        LeftFootLine.Visible = true
                        LeftKneeLine.Visible = true
                        RightKneeLine.Visible = true
                        RightLegLine.Visible = true
                        LeftLegLine.Visible = true
                        LeftHandLine.Visible = true
                        RightHandLine.Visible = true
                        MainLine.Visible = true
                        LeftLine.Visible = true
                        RightLine.Visible = true
                        RightElbowLine.Visible = true
                        LeftElbowLine.Visible = true
                    else
                        RightFootLine.Visible = false
                        LeftFootLine.Visible = false
                        LeftKneeLine.Visible = false
                        RightKneeLine.Visible = false
                        RightLegLine.Visible = false
                        LeftLegLine.Visible = false
                        LeftHandLine.Visible = false
                        RightHandLine.Visible = false
                        MainLine.Visible = false
                        LeftLine.Visible = false
                        RightLine.Visible = false
                        RightElbowLine.Visible = false
                        LeftElbowLine.Visible = false
                    end
                else
                    RightFootLine:Remove()
                    LeftFootLine:Remove()
                    LeftKneeLine:Remove()
                    RightKneeLine:Remove()
                    RightLegLine:Remove()
                    LeftLegLine:Remove()
                    LeftHandLine:Remove()
                    RightHandLine:Remove()
                    MainLine:Remove()
                    LeftLine:Remove()
                    RightLine:Remove()
                    RightElbowLine:Remove()
                    LeftElbowLine:Remove()
                    wait(2)
                end
            end)
        end
    end)
    wait()
end
for i,v in pairs(game.Players:GetChildren()) do
    addskeletonesp(v)
end
-- r6 version
spawn(function()
    local camera = workspace.CurrentCamera
    local Players = game:GetService("Players")
    local localplayer = Players.LocalPlayer 
    local runservice = game:GetService("RunService")
    
    local esp_settings = {
        enabled = true,
        skel = true,
        skel_col = Color3.fromRGB(255,255,255)
    }
    
    local function draw(player, character)
    
        local skel_head = Drawing.new("Line")
        skel_head.Visible = true
        skel_head.Thickness = 1.5
        skel_head.Color = Color3.new(1,1,1)
    
        local skel_torso = Drawing.new("Line")
        skel_torso.Visible = true
        skel_torso.Thickness = 1.5
        skel_torso.Color = Color3.new(1,1,1)
    
        local skel_leftarm = Drawing.new("Line")
        skel_leftarm.Visible = true
        skel_leftarm.Thickness = 1.5
        skel_leftarm.Color = Color3.new(1,1,1)
    
        local skel_rightarm = Drawing.new("Line")
        skel_rightarm.Visible = true
        skel_rightarm.Thickness = 1.5
        skel_rightarm.Color = Color3.new(1,1,1)
    
        local skel_leftleg = Drawing.new("Line")
        skel_leftleg.Visible = true
        skel_leftleg.Thickness = 1.5
        skel_leftleg.Color = Color3.new(1,1,1)
    
        local skel_rightleg = Drawing.new("Line")
        skel_rightleg.Visible = true
        skel_rightleg.Thickness = 1.5
        skel_rightleg.Color = Color3.new(1,1,1)
    
        local function update()
            local connection
            connection = runservice.RenderStepped:Connect(function()
    
                if workspace:FindFirstChild(character.Name) and
                character and 
                character:FindFirstChild("HumanoidRootPart") and 
                character:FindFirstChild("Humanoid") and 
                character:FindFirstChild("Humanoid").Health ~= 0 then 
    
                    local character_rootpart_3d = character.HumanoidRootPart.Position
                    local character_rootpart_2d, rootpart_onscreen = camera:WorldToViewportPoint(character_rootpart_3d)
    
                    if rootpart_onscreen and character.Humanoid.RigType == Enum.HumanoidRigType.R6 and esp_settings.enabled then
    
                        local head_2d = camera:WorldToViewportPoint(character.Head.Position)
                        local torso_upper_2d = camera:WorldToViewportPoint(character.Torso.Position + Vector3.new(0,1,0))
                        local torso_lower_2d = camera:WorldToViewportPoint(character.Torso.Position + Vector3.new(0,-1,0))
                        
                        local leftarm_2d = camera:WorldToViewportPoint(character["Left Arm"].Position + Vector3.new(0,-1,0))
                        local rightarm_2d = camera:WorldToViewportPoint(character["Right Arm"].Position + Vector3.new(0,-1,0))
                        local leftleg_2d = camera:WorldToViewportPoint(character["Left Leg"].Position + Vector3.new(0,-1,0))
                        local rightleg_2d = camera:WorldToViewportPoint(character["Right Leg"].Position + Vector3.new(0,-1,0))
    
                        skel_head.From = Vector2.new(head_2d.X, head_2d.Y)
                        skel_head.To = Vector2.new(torso_upper_2d.X, torso_upper_2d.Y)
    
                        skel_torso.From = Vector2.new(torso_upper_2d.X, torso_upper_2d.Y)
                        skel_torso.To = Vector2.new(torso_lower_2d.X, torso_lower_2d.Y)
                        
                        skel_leftarm.From = Vector2.new(torso_upper_2d.X, torso_upper_2d.Y)
                        skel_leftarm.To = Vector2.new(leftarm_2d.X, leftarm_2d.Y)
    
                        skel_rightarm.From = Vector2.new(torso_upper_2d.X, torso_upper_2d.Y)
                        skel_rightarm.To = Vector2.new(rightarm_2d.X, rightarm_2d.Y)
    
                        skel_leftleg.From = Vector2.new(torso_lower_2d.X, torso_lower_2d.Y)
                        skel_leftleg.To = Vector2.new(leftleg_2d.X, leftleg_2d.Y)
    
                        skel_rightleg.From = Vector2.new(torso_lower_2d.X, torso_lower_2d.Y)
                        skel_rightleg.To = Vector2.new(rightleg_2d.X, rightleg_2d.Y)
    
                        skel_head.Visible = esp_settings.skel
                        skel_torso.Visible = esp_settings.skel
                        skel_leftarm.Visible = esp_settings.skel
                        skel_rightarm.Visible = esp_settings.skel
                        skel_leftleg.Visible = esp_settings.skel
                        skel_rightleg.Visible = esp_settings.skel
    
                    else
    
                        skel_head.Visible = false
                        skel_torso.Visible = false
                        skel_leftarm.Visible = false
                        skel_rightarm.Visible = false
                        skel_leftleg.Visible = false
                        skel_rightleg.Visible = false
    
                    end
    
                else
    
                    if player == nil then
                        connection:Disconnect()
                        connection = nil 
                    end
    
                    skel_head.Visible = false
                    skel_torso.Visible = false
                    skel_leftarm.Visible = false
                    skel_rightarm.Visible = false
                    skel_leftleg.Visible = false
                    skel_rightleg.Visible = false
    
                end
            end)
        end
        coroutine.wrap(update)()
    
    end
    
    local function playeradded(player)
        if player.Character then
            coroutine.wrap(draw)(player, player.Character)
        end
        player.CharacterAdded:Connect(function(character)
            coroutine.wrap(draw)(player, character)
        end)
    end
    
    for a,b in next, Players:GetPlayers() do
        if b ~= localplayer then
            playeradded(b)
        end
    end
    
    Players.PlayerAdded:Connect(playeradded)
end)
